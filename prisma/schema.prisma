// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}
enum NotificationType {
  friendrequest
  friendrequestconfirmed
  newlike
  newcomment
}


model Notification {
id String   @id @default(uuid()) 
createdAt DateTime @default(now())

from String
to String
onPost String?

seen Boolean @default(false)
type  NotificationType  


}

model Friend {
   id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  userId String    @unique
  friends  String  // ? json [{userId:string}]
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @updatedAt()
  
  content   String   @db.LongText

  autherId String

  title     String
  published Boolean @default(false) 
  likes   Like[]
  Comment Comment[]

  @@index([autherId])
  @@unique([createdAt,id])
}

model Like {
  Post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String

  
  autherId String

  @@id([postId, autherId])
  @@index([postId])
  @@index([autherId])
}

model Comment {
  id String @id @default(cuid())
  createdAt DateTime @default(now())

  Post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String

  autherId String

  content String @db.LongText

  @@index([postId])
  @@index([autherId])
}
